input {
    tcp {
        port => 5556
        codec => json
    }
}

filter {
    grok {
        match => ["user", "%{GREEDYDATA:[@metadata][user]}"]
    }
    grok {
        match => ["type_log", "%{GREEDYDATA:[@metadata][type_log]}"]
    }
    grok {
        match => ["uuid", "%{GREEDYDATA:[@metadata][uuid]}"]
    }
    if [type_log] =~ "bluecoat" {
        csv {
            columns => ["syslogmonth", "syslogdatetime", "syslogtime", "source", "date", "time", "time-taken", "c-ip", "sc-status", "s-action", "sc-bytes", "cs-bytes", "cs-method", "cs-uri-scheme", "cs-host", "cs-uri-port", "cs-uri-path", "cs-uri-query", "cs-username", "cs-auth-group", "s-supplier-name", "rs(Content-Type)", "cs(Referer)", "cs(User-Agent)", "sc-filter-result", "cs-categories", "x-virus-id", "s-ip"]
            separator => " "
        }
        mutate {
            add_field => { "syslogdate" => "%{syslogmonth} %{syslogdatetime} %{syslogtime}" }
            remove_field => [ "syslogmonth","syslogdatetime","syslogtime" ]
        }
    }
    if [type_log] =~ "juniper" {
        if [message] =~ "ASP_SFW_CREATE_ACCEPT_FLOW" {
            grok {
                match => ["message", "%{SYSLOGTIMESTAMP:syslogdate} %{IPORHOST:source} .*ASP_SFW_CREATE_ACCEPT_FLOW.*\(%{DATA:ntype}\) application: .*%{IP:src_ip}:%{INT:src_port}%{SPACE}->%{SPACE}%{IP:dst_ip}:%{INT:dst_port}.* %{IP:nat_ip}:%{INT:nat_port}"]
            }
            grok {
                match => [
                    "message", "%{SYSLOGTIMESTAMP:syslogdate} %{IPORHOST:source} .*ASP_SFW_CREATE_ACCEPT_FLOW.* %{IP:src_ip}:%{INT:srcpport} \[%{IP:nat_ip}:%{INT:nat_port}\]%{SPACE}->%{SPACE}%{IP:dst_ip}:%{INT:dst_port}%{SPACE}\(%{DATA:ntype}\)",
                    "message", "%{SYSLOGTIMESTAMP:syslogdate} %{IPORHOST:source} .*ASP_SFW_CREATE_ACCEPT_FLOW.* %{IP:src_ip}:%{INT:src_port}%{SPACE}->%{SPACE}%{IP:dst_ip}:%{INT:dst_port}%{SPACE}\(%{DATA:ntype}\)"
                ]
            }
        }
        if [message] =~ "ASP_SFW_DELETE_FLOW" {
            grok {
                match => ["message", "%{SYSLOGTIMESTAMP:syslogdate} %{IPORHOST:source} .*ASP_SFW_DELETE_FLOW.*\(%{DATA:ntype}\) application: .*%{IP:src_ip}:%{INT:src_port}%{SPACE}->%{SPACE}%{IP:dst_ip}:%{INT:dst_port}.* %{IP:nat_ip}:%{INT:nat_port}"]
            }
            grok {
                match => [
                    "message", "%{SYSLOGTIMESTAMP:syslogdate} %{IPORHOST:source} .*ASP_SFW_DELETE_FLOW.* %{IP:src_ip}:%{INT:srcpport} \[%{IP:nat_ip}:%{INT:nat_port}\]%{SPACE}->%{SPACE}%{IP:dst_ip}:%{INT:dst_port}%{SPACE}\(%{DATA:ntype}\)",
                    "message", "%{SYSLOGTIMESTAMP:syslogdate} %{IPORHOST:source} .*ASP_SFW_DELETE_FLOW.* %{IP:src_ip}:%{INT:src_port}%{SPACE}->%{SPACE}%{IP:dst_ip}:%{INT:dst_port}%{SPACE}\(%{DATA:ntype}\)"
                ]
            }
        }
        if [message] =~ "ASP_NAT_POOL_RELEASE" {
            grok {
                match => ["message", "%{SYSLOGTIMESTAMP:syslogdate} %{IPORHOST:source} .*ASP_NAT_POOL_RELEASE.* %{IP:natpool_ip}:%{INT:natpool_port}"]
            }
        }
        if [message] =~ "JSERVICES_SESSION" {
            grok {
                match => [
                    "message", "%{SYSLOGTIMESTAMP:syslogdate} %{IPORHOST:source} %{DATA} application:%{DATA}, %{DATA} %{IP:src_ip}:%{INT:src_port} \[%{IP:nat_ip}:%{INT:nat_port}\]%{SPACE}->%{SPACE}%{IP:dst_ip}:%{INT:dst_port} \(%{DATA:ntype}\)",
                    "message", "%{SYSLOGTIMESTAMP:syslogdate} %{IPORHOST:source} %{DATA} application:%{DATA}, %{DATA} %{IP:src_ip}:%{INT:src_port}%{SPACE}->%{SPACE}%{IP:dst_ip}:%{INT:dst_port} \(%{DATA:ntype}\)"
                ]
            }
        }
    }
    #date {
        #match => [ "syslogdate", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
        #target => "syslogdate"
    #}
    mutate {
        remove_field => [ "host","port","user","uuid", "tags", "@version" ]
    }
}

output {
    #if !("_grokparsefailure" in [tags]) {
        stdout { codec => rubydebug { metadata => true } }
    #}
}

